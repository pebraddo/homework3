[
  {
    "objectID": "Control Flow Functions.html",
    "href": "Control Flow Functions.html",
    "title": "Control Flow Functions",
    "section": "",
    "text": "Powell Braddock - ST 558\nHomework 3\nSeptember 10, 2025\nHere we are loading in the .rda file that has a version of the list we created in the last part of the previous homework.\n\nload(\"hw2_list.rda\")\n\n\n\nTask 1: Control Flow Practice\nNow, we can use that loaded in file to see bp_list object in the environment. We want to add a column to the two data frames in this list object: treatment and placebo. Please note the treatment data frame has 20 subjects, while the placebo data frame has 10 subjects.\n\nbp_list$treatment$status &lt;- character(20)\nbp_list$placebo$status &lt;- character(10)\n\nNow, we are looking at the treatment data frame and creating a for loop that uses an if/then/else statement to assign a ‘status’ associated with each post-treatment blood pressure: optimal, borderline, and high.\n\nfor(i in 1:20){\n  if (bp_list$treatment$post_bp[i] &lt;= 120)\n    {bp_list$treatment$status[i] &lt;- 'optimal'\n  } else if (bp_list$treatment$post_bp[i] &gt; 130)\n    {bp_list$treatment$status[i] &lt;- 'high'\n  } else if (bp_list$treatment$post_bp[i] &gt; 120 & bp_list$treatment$post_bp[i] &lt;= 130)\n    {bp_list$treatment$status[i] &lt;- 'borderline'\n  }\n}\nbp_list$treatment\n\n              patient pre_bp post_bp diff_bp normal     status\nSubject_1   Subject_1    120     127      -7  FALSE borderline\nSubject_2   Subject_2    151     145       6  FALSE       high\nSubject_3   Subject_3    125     135     -10  FALSE       high\nSubject_4   Subject_4    126     122       4  FALSE borderline\nSubject_5   Subject_5    115     115       0   TRUE    optimal\nSubject_6   Subject_6    132     122      10  FALSE borderline\nSubject_7   Subject_7    132     123       9  FALSE borderline\nSubject_8   Subject_8    129     126       3  FALSE borderline\nSubject_9   Subject_9    134     126       8  FALSE borderline\nSubject_10 Subject_10    139     129      10  FALSE borderline\nSubject_11 Subject_11    127     132      -5  FALSE       high\nSubject_12 Subject_12    122     146     -24  FALSE       high\nSubject_13 Subject_13    127     120       7  FALSE    optimal\nSubject_14 Subject_14    135     114      21   TRUE    optimal\nSubject_15 Subject_15    133     121      12  FALSE borderline\nSubject_16 Subject_16    128     120       8  FALSE    optimal\nSubject_17 Subject_17    147     128      19  FALSE borderline\nSubject_18 Subject_18    138     120      18  FALSE    optimal\nSubject_19 Subject_19    140     133       7  FALSE       high\nSubject_20 Subject_20    132     115      17   TRUE    optimal\n\n\nWe do the same thing for the placebo data frame in the bp_list object.\n\nfor(i in 1:10){\n  if (bp_list$placebo$post_bp[i] &lt;= 120)\n    {bp_list$placebo$status[i] &lt;- 'optimal'\n  } else if (bp_list$placebo$post_bp[i] &gt; 130)\n    {bp_list$placebo$status[i] &lt;- 'high'\n  } else if (bp_list$placebo$post_bp[i] &gt; 120 & bp_list$placebo$post_bp[i] &lt;= 130)\n    {bp_list$placebo$status[i] &lt;- 'borderline'\n  }\n}\nbp_list$placebo\n\n      patient pre_bp post_bp diff_bp normal     status\n1   Subject_1    138     105      33   TRUE    optimal\n2   Subject_2    135     136      -1  FALSE       high\n3   Subject_3    147     123      24  FALSE borderline\n4   Subject_4    117     130     -13  FALSE borderline\n5   Subject_5    152     134      18  FALSE       high\n6   Subject_6    134     143      -9  FALSE       high\n7   Subject_7    114     135     -21  FALSE       high\n8   Subject_8    121     139     -18  FALSE       high\n9   Subject_9    131     120      11  FALSE    optimal\n10 Subject_10    130     124       6  FALSE borderline\n\n\n\n\nTask 2: Function Writing\nLet’s create a function called my_function that shows the statistic of interest for the data frames, with a default of calculating the data frames’ mean.\n\nmy_function &lt;- function(list_of_dfs, stat = \"mean\"){\n  my_function &lt;- get(stat)\n  treatment &lt;- list_of_dfs[[1]]\n  placebo &lt;- list_of_dfs[[2]]\n  vector_values &lt;- c(my_function(treatment$pre), my_function(treatment$post), my_function(treatment$diff), my_function(placebo$pre), my_function(placebo$post), my_function(placebo$diff))\n  names(vector_values) &lt;- c(paste0(\"treatment_pre\", stat),paste0(\"treatment_post\", stat), paste0(\"treatment_diff\", stat), paste0(\"placebo_pre\", stat), paste0(\"placebo_post\", stat), paste0(\"placebo_diff\", stat))\n  return(vector_values)\n}\n\nHere’s the default use of the function on the bp_list we were working with.\n\nmy_function(bp_list)\n\n treatment_premean treatment_postmean treatment_diffmean    placebo_premean \n            131.60             125.95               5.65             131.90 \n  placebo_postmean   placebo_diffmean \n            128.90               3.00 \n\n\nNow, we can test this function using other statistics of interest: variability, standard deviation, minimum, and maximum.\n\nmy_function(bp_list, stat='var')\n\n treatment_prevar treatment_postvar treatment_diffvar    placebo_prevar \n         75.72632          78.99737         117.81842         149.87778 \n  placebo_postvar   placebo_diffvar \n        124.98889         341.33333 \n\nmy_function(bp_list, stat='sd')\n\n treatment_presd treatment_postsd treatment_diffsd    placebo_presd \n        8.702087         8.888046        10.854419        12.242458 \n  placebo_postsd   placebo_diffsd \n       11.179843        18.475209 \n\nmy_function(bp_list, stat='min')\n\n treatment_premin treatment_postmin treatment_diffmin    placebo_premin \n              115               114               -24               114 \n  placebo_postmin   placebo_diffmin \n              105               -21 \n\nmy_function(bp_list, stat='max')\n\n treatment_premax treatment_postmax treatment_diffmax    placebo_premax \n              151               146                21               152 \n  placebo_postmax   placebo_diffmax \n              143                33"
  }
]